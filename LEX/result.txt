MACRO: #
KEYWORD: include
INCLUDE: <math.h>
MACRO: #
KEYWORD: include
INCLUDE: <stdio.h>
MACRO: #
KEYWORD: include
INCLUDE: <stdlib.h>
MACRO: #
KEYWORD: include
INCLUDE: <string.h>
MACRO: #
KEYWORD: define
ID1: bool
KEYWORD: int
MACRO: #
KEYWORD: define
ID2: false
NUM: 0
MACRO: #
KEYWORD: define
ID3: true
NUM: 1
MACRO: #
KEYWORD: define
ID4: MAXSIZE
NUM: 20
MACRO: #
KEYWORD: define
ID5: ElementType
KEYWORD: int
KEYWORD: typedef
KEYWORD: int
ID6: Position
PUNCTUATION: ;
KEYWORD: typedef
KEYWORD: struct
ID7: LNode
OPERATOR: *
ID8: List
PUNCTUATION: ;
KEYWORD: struct
ID9: LNode
BRACKET: {
ID10: ElementType
ID11: Data
BRACKET: [
ID12: MAXSIZE
BRACKET: ]
PUNCTUATION: ;
ID13: Position
ID14: Last
PUNCTUATION: ;
BRACKET: }
PUNCTUATION: ;
ID15: List
ID16: MakeEmpty
BRACKET: (
BRACKET: )
BRACKET: {
ID17: List
ID18: L
PUNCTUATION: ;
ID19: L
RELOP: =
BRACKET: (
ID20: List
BRACKET: )
ID21: malloc
BRACKET: (
KEYWORD: sizeof
BRACKET: (
KEYWORD: struct
ID22: LNode
BRACKET: )
BRACKET: )
PUNCTUATION: ;
ID23: L
OPERATOR: -
RELOP: >
ID24: Last
RELOP: =
OPERATOR: -
NUM: 1
PUNCTUATION: ;
KEYWORD: return
ID25: L
PUNCTUATION: ;
BRACKET: }
MACRO: #
KEYWORD: define
ID26: ERROR
OPERATOR: -
NUM: 1
ID27: Position
ID28: Find
BRACKET: (
ID29: List
ID30: L
PUNCTUATION: ,
ID31: ElementType
ID32: X
BRACKET: )
BRACKET: {
ID33: Position
ID34: i
RELOP: =
NUM: 0
PUNCTUATION: ;
KEYWORD: while
BRACKET: (
ID35: i
RELOP: <=
ID36: L
OPERATOR: -
RELOP: >
ID37: Last
OPERATOR: &
OPERATOR: &
ID38: L
OPERATOR: -
RELOP: >
ID39: Data
BRACKET: [
ID40: i
BRACKET: ]
UNKNOW: !
RELOP: =
ID41: X
BRACKET: )
ID42: i
OPERATOR: +
OPERATOR: +
PUNCTUATION: ;
KEYWORD: if
BRACKET: (
ID43: i
RELOP: >
ID44: L
OPERATOR: -
RELOP: >
ID45: Last
BRACKET: )
KEYWORD: return
ID46: ERROR
PUNCTUATION: ;
KEYWORD: else
KEYWORD: return
ID47: i
PUNCTUATION: ;
BRACKET: }
ID48: bool
ID49: Insert
BRACKET: (
ID50: List
ID51: L
PUNCTUATION: ,
ID52: ElementType
ID53: X
PUNCTUATION: ,
ID54: Position
ID55: P
BRACKET: )
BRACKET: {
ID56: Position
ID57: i
PUNCTUATION: ;
KEYWORD: if
BRACKET: (
ID58: L
OPERATOR: -
RELOP: >
ID59: Last
RELOP: ==
ID60: MAXSIZE
OPERATOR: -
NUM: 1
BRACKET: )
BRACKET: {
ID61: printf
BRACKET: (
STRING0: "表满"
BRACKET: )
PUNCTUATION: ;
KEYWORD: return
ID62: false
PUNCTUATION: ;
BRACKET: }
KEYWORD: if
BRACKET: (
ID63: P
RELOP: <
NUM: 0
OPERATOR: |
OPERATOR: |
ID64: P
RELOP: >
ID65: L
OPERATOR: -
RELOP: >
ID66: Last
OPERATOR: +
NUM: 1
BRACKET: )
BRACKET: {
ID67: printf
BRACKET: (
STRING1: "位置不合法"
BRACKET: )
PUNCTUATION: ;
KEYWORD: return
ID68: false
PUNCTUATION: ;
BRACKET: }
KEYWORD: for
BRACKET: (
ID69: i
RELOP: =
ID70: L
OPERATOR: -
RELOP: >
ID71: Last
PUNCTUATION: ;
ID72: i
RELOP: >=
ID73: P
PUNCTUATION: ;
ID74: i
OPERATOR: -
OPERATOR: -
BRACKET: )
ID75: L
OPERATOR: -
RELOP: >
ID76: Data
BRACKET: [
ID77: i
OPERATOR: +
NUM: 1
BRACKET: ]
RELOP: =
ID78: L
OPERATOR: -
RELOP: >
ID79: Data
BRACKET: [
ID80: i
BRACKET: ]
PUNCTUATION: ;
ID81: L
OPERATOR: -
RELOP: >
ID82: Data
BRACKET: [
ID83: P
BRACKET: ]
RELOP: =
ID84: X
PUNCTUATION: ;
ID85: L
OPERATOR: -
RELOP: >
ID86: Last
OPERATOR: +
OPERATOR: +
PUNCTUATION: ;
KEYWORD: return
ID87: true
PUNCTUATION: ;
BRACKET: }
ID88: bool
ID89: Delete
BRACKET: (
ID90: List
ID91: L
PUNCTUATION: ,
ID92: Position
ID93: P
BRACKET: )
BRACKET: {
ID94: Position
ID95: i
PUNCTUATION: ;
KEYWORD: if
BRACKET: (
ID96: P
RELOP: <
NUM: 0
OPERATOR: |
OPERATOR: |
ID97: P
RELOP: >
ID98: L
OPERATOR: -
RELOP: >
ID99: Last
BRACKET: )
BRACKET: {
ID100: printf
BRACKET: (
STRING2: "位置%d不存在元素"
PUNCTUATION: ,
ID101: P
BRACKET: )
PUNCTUATION: ;
KEYWORD: return
ID102: false
PUNCTUATION: ;
BRACKET: }
KEYWORD: for
BRACKET: (
ID103: i
RELOP: =
ID104: P
OPERATOR: +
NUM: 1
PUNCTUATION: ;
ID105: i
RELOP: <=
ID106: L
OPERATOR: -
RELOP: >
ID107: Last
PUNCTUATION: ;
ID108: i
OPERATOR: +
OPERATOR: +
BRACKET: )
ID109: L
OPERATOR: -
RELOP: >
ID110: Data
BRACKET: [
ID111: i
OPERATOR: -
NUM: 1
BRACKET: ]
RELOP: =
ID112: L
OPERATOR: -
RELOP: >
ID113: Data
BRACKET: [
ID114: i
BRACKET: ]
PUNCTUATION: ;
ID115: L
OPERATOR: -
RELOP: >
ID116: Last
OPERATOR: -
OPERATOR: -
PUNCTUATION: ;
KEYWORD: return
ID117: true
PUNCTUATION: ;
BRACKET: }
